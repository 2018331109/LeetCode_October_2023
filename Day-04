706. Design HashMap

STATEMENT
Design a HashMap without using any built-in hash table libraries.
Implement the MyHashMap class:
    MyHashMap() initializes the object with an empty map.
    void put(int key, int value) inserts a (key, value) pair into the HashMap. 
    If the key already exists in the map, update the corresponding value.
    int get(int key) returns the value to which the specified key is mapped, or -1 if this map contains 
    no mapping for the key.
    void remove(key) removes the key and its corresponding value if the map contains the mapping for the key.

SOLUTION

C++
class MyHashMap
{
public:
    
    //vector<int>vis(1000009);
    int vis[1000009];
     
    MyHashMap()
    {
        fill(vis, vis+1000009, -1);
    }

    void put(int key, int value)
    {
        vis[key]=value;
    }

    int get(int key)
    {
        return vis[key];
    }

    void remove(int key)
    {
        vis[key]=-1;
    }
};


PYTHON
class MyHashMap:

    def __init__(self):
        self.vis = [-1]*(1000009)
    
    def put(self, key: int, value: int) -> None:
        self.vis[key] = value

    def get(self, key: int) -> int:
        return self.vis[key]

    def remove(self, key: int) -> None:
        self.vis[key] = -1


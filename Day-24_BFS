515. Find Largest Value in Each Tree Row

STATEMENT
Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).

SOLUTION

C++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    vector<int> largestValues(TreeNode* root)
    {
        vector<int>ans;
                if (root == nullptr) {
            return ans; // Return an empty vector for an empty tree.
        }

        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int sz=q.size();
            int mx = INT_MIN;

            for(int i=0; i<sz; i++)
            {
                TreeNode* cur=q.front();
                q.pop();
                mx=max(mx, cur->val);

                if(cur->left)
                {
                    q.push(cur->left);
                }
                if(cur->right)
                {
                    q.push(cur->right);
                }
            }
            
            ans.push_back(mx);
        }
        return ans;

    }
};
